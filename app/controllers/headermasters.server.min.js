"use strict";var mongoose=require("mongoose"),errorHandler=require("./errors.server.controller"),Headermaster=mongoose.model("Headermaster");exports.create=function(a,b){var c=new Headermaster(a.body);c.user=a.user,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.read=function(a,b){b.jsonp(a.headermaster)},exports.update=function(a,b){var c=a.headermaster;c.code=a.body.code,c.value=a.body.value,c.description=a.body.description,c.updateUser=a.body.updateUser,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports["delete"]=function(a,b){var c=a.headermaster;c.remove(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.list=function(a,b){Headermaster.find().sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.listByHeader=function(a,b){Headermaster.find({maintainParent:a.body.params}).sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.headermasterByID=function(a,b,c,d){Headermaster.findById(d).populate("user","displayName").exec(function(b,e){return b?c(b):e?(a.headermaster=e,void c()):c(new Error("Failed to load Headermaster "+d))})},exports.hasAuthorization=function(a,b,c){return a.headermaster.user.id!==a.user.id?b.status(403).send("User is not authorized"):void c()};var mongoose=require("mongoose"),errorHandler=require("./errors.server.controller"),Headermaster=mongoose.model("Headermaster");exports.create=function(a,b){var c=new Headermaster(a.body);c.user=a.user,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.read=function(a,b){b.jsonp(a.headermaster)},exports.update=function(a,b){var c=a.headermaster;c.code=a.body.code,c.value=a.body.value,c.description=a.body.description,c.updateUser=a.body.updateUser,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports["delete"]=function(a,b){var c=a.headermaster;c.remove(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.list=function(a,b){Headermaster.find().sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.listByHeader=function(a,b){Headermaster.find({maintainParent:a.body.params}).sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.headermasterByID=function(a,b,c,d){Headermaster.findById(d).populate("user","displayName").exec(function(b,e){return b?c(b):e?(a.headermaster=e,void c()):c(new Error("Failed to load Headermaster "+d))})},exports.hasAuthorization=function(a,b,c){return a.headermaster.user.id!==a.user.id?b.status(403).send("User is not authorized"):void c()};var mongoose=require("mongoose"),errorHandler=require("./errors.server.controller"),Headermaster=mongoose.model("Headermaster");exports.create=function(a,b){var c=new Headermaster(a.body);c.user=a.user,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.read=function(a,b){b.jsonp(a.headermaster)},exports.update=function(a,b){var c=a.headermaster;c.code=a.body.code,c.value=a.body.value,c.description=a.body.description,c.updateUser=a.body.updateUser,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports["delete"]=function(a,b){var c=a.headermaster;c.remove(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.list=function(a,b){Headermaster.find().sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.listByHeader=function(a,b){Headermaster.find({maintainParent:a.body.params}).sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.headermasterByID=function(a,b,c,d){Headermaster.findById(d).populate("user","displayName").exec(function(b,e){return b?c(b):e?(a.headermaster=e,void c()):c(new Error("Failed to load Headermaster "+d))})},exports.hasAuthorization=function(a,b,c){return a.headermaster.user.id!==a.user.id?b.status(403).send("User is not authorized"):void c()};var mongoose=require("mongoose"),errorHandler=require("./errors.server.controller"),Headermaster=mongoose.model("Headermaster");exports.create=function(a,b){var c=new Headermaster(a.body);c.user=a.user,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.read=function(a,b){b.jsonp(a.headermaster)},exports.update=function(a,b){var c=a.headermaster;c.code=a.body.code,c.value=a.body.value,c.description=a.body.description,c.updateUser=a.body.updateUser,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports["delete"]=function(a,b){var c=a.headermaster;c.remove(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.list=function(a,b){Headermaster.find().sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.listByHeader=function(a,b){Headermaster.find({maintainParent:a.body.params}).sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.headermasterByID=function(a,b,c,d){Headermaster.findById(d).populate("user","displayName").exec(function(b,e){return b?c(b):e?(a.headermaster=e,void c()):c(new Error("Failed to load Headermaster "+d))})},exports.hasAuthorization=function(a,b,c){return a.headermaster.user.id!==a.user.id?b.status(403).send("User is not authorized"):void c()};var mongoose=require("mongoose"),errorHandler=require("./errors.server.controller"),Headermaster=mongoose.model("Headermaster");exports.create=function(a,b){var c=new Headermaster(a.body);c.user=a.user,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.read=function(a,b){b.jsonp(a.headermaster)},exports.update=function(a,b){var c=a.headermaster;c.code=a.body.code,c.value=a.body.value,c.description=a.body.description,c.updateUser=a.body.updateUser,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports["delete"]=function(a,b){var c=a.headermaster;c.remove(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.list=function(a,b){Headermaster.find().sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.listByHeader=function(a,b){Headermaster.find({maintainParent:a.body.params}).sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.headermasterByID=function(a,b,c,d){Headermaster.findById(d).populate("user","displayName").exec(function(b,e){return b?c(b):e?(a.headermaster=e,void c()):c(new Error("Failed to load Headermaster "+d))})},exports.hasAuthorization=function(a,b,c){return a.headermaster.user.id!==a.user.id?b.status(403).send("User is not authorized"):void c()};var mongoose=require("mongoose"),errorHandler=require("./errors.server.controller"),Headermaster=mongoose.model("Headermaster");exports.create=function(a,b){var c=new Headermaster(a.body);c.user=a.user,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.read=function(a,b){b.jsonp(a.headermaster)},exports.update=function(a,b){var c=a.headermaster;c.code=a.body.code,c.value=a.body.value,c.description=a.body.description,c.updateUser=a.body.updateUser,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports["delete"]=function(a,b){var c=a.headermaster;c.remove(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.list=function(a,b){Headermaster.find().sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.listByHeader=function(a,b){Headermaster.find({maintainParent:a.body.params}).sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.headermasterByID=function(a,b,c,d){Headermaster.findById(d).populate("user","displayName").exec(function(b,e){return b?c(b):e?(a.headermaster=e,void c()):c(new Error("Failed to load Headermaster "+d))})},exports.hasAuthorization=function(a,b,c){return a.headermaster.user.id!==a.user.id?b.status(403).send("User is not authorized"):void c()};var mongoose=require("mongoose"),errorHandler=require("./errors.server.controller"),Headermaster=mongoose.model("Headermaster");exports.create=function(a,b){var c=new Headermaster(a.body);c.user=a.user,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.read=function(a,b){b.jsonp(a.headermaster)},exports.update=function(a,b){var c=a.headermaster;c.code=a.body.code,c.value=a.body.value,c.description=a.body.description,c.updateUser=a.body.updateUser,c.save(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports["delete"]=function(a,b){var c=a.headermaster;c.remove(function(a){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.list=function(a,b){Headermaster.find().sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.listByHeader=function(a,b){Headermaster.find({maintainParent:a.body.params}).sort("-created").populate("user","displayName").populate("maintainParent").exec(function(a,c){return a?b.status(400).send({message:errorHandler.getErrorMessage(a)}):void b.jsonp(c)})},exports.headermasterByID=function(a,b,c,d){Headermaster.findById(d).populate("user","displayName").exec(function(b,e){return b?c(b):e?(a.headermaster=e,void c()):c(new Error("Failed to load Headermaster "+d))})},exports.hasAuthorization=function(a,b,c){return a.headermaster.user.id!==a.user.id?b.status(403).send("User is not authorized"):void c()};