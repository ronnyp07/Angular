"use strict";var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};
h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"
})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.signup=function(a,b){delete a.body.roles;var c=new User(a.body);c.provider="local",c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):(c.password=void 0,c.salt=void 0,void a.login(c,function(a){a?b.status(400).send(a):b.json(c)}))})},exports.signin=function(a,b,c){passport.authenticate("local",function(c,d,e){c||!d?b.status(400).send(e):(d.password=void 0,d.salt=void 0,a.login(d,function(a){a?b.status(400).send(a):b.json(d)}))})(a,b,c)},exports.signout=function(a,b){a.logout(),b.redirect("/")},exports.oauthCallback=function(a){return function(b,c,d){passport.authenticate(a,function(a,d,e){return a||!d?c.redirect("/#!/signin"):void b.login(d,function(a){return a?c.redirect("/#!/signin"):c.redirect(e||"/")})})(b,c,d)}},exports.saveOAuthUserProfile=function(a,b,c){if(a.user){var d=a.user;if(d.provider===b.provider||d.additionalProvidersData&&d.additionalProvidersData[b.provider])return c(new Error("User is already connected using this provider"),d);d.additionalProvidersData||(d.additionalProvidersData={}),d.additionalProvidersData[b.provider]=b.providerData,d.markModified("additionalProvidersData"),d.save(function(a){return c(a,d,"/#!/settings/accounts")})}else{var e="providerData."+b.providerIdentifierField,f="additionalProvidersData."+b.provider+"."+b.providerIdentifierField,g={};g.provider=b.provider,g[e]=b.providerData[b.providerIdentifierField];var h={};h[f]=b.providerData[b.providerIdentifierField];var i={$or:[g,h]};User.findOne(i,function(a,d){if(a)return c(a);if(d)return c(a,d);var e=b.username||(b.email?b.email.split("@")[0]:"");User.findUniqueUsername(e,null,function(a){d=new User({firstName:b.firstName,lastName:b.lastName,username:a,displayName:b.displayName,email:b.email,provider:b.provider,providerData:b.providerData}),d.save(function(a){return c(a,d)})})})}},exports.removeOAuthProvider=function(a,b,c){var d=a.user,e=a.param("provider");d&&e&&(d.additionalProvidersData[e]&&(delete d.additionalProvidersData[e],d.markModified("additionalProvidersData")),d.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(d,function(a){a?b.status(400).send(a):b.json(d)})}))};var _=require("lodash"),mongoose=require("mongoose"),User=mongoose.model("User");exports.userByID=function(a,b,c,d){User.findOne({_id:d}).exec(function(b,e){return b?c(b):e?(a.profile=e,void c()):c(new Error("Failed to load User "+d))})},exports.requiresLogin=function(a,b,c){return a.isAuthenticated()?void c():b.status(401).send({message:"User is not logged in"})},exports.hasAuthorization=function(a){var b=this;return function(c,d,e){b.requiresLogin(c,d,function(){return _.intersection(c.user.roles,a).length?e():d.status(403).send({message:"User is not authorized"})})}};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};var _=require("lodash"),errorHandler=require("../errors.server.controller"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User"),config=require("../../../config/config"),nodemailer=require("nodemailer"),async=require("async"),crypto=require("crypto");exports.forgot=function(a,b,c){async.waterfall([function(a){crypto.randomBytes(20,function(b,c){var d=c.toString("hex");a(b,d)})},function(c,d){return a.body.username?void User.findOne({username:a.body.username},"-salt -password",function(a,e){return e?"local"!==e.provider?b.status(400).send({message:"It seems like you signed up using your "+e.provider+" account"}):(e.resetPasswordToken=c,e.resetPasswordExpires=Date.now()+36e5,void e.save(function(a){d(a,c,e)})):b.status(400).send({message:"No account with that username has been found"})}):b.status(400).send({message:"Username field must not be blank"})},function(c,d,e){b.render("templates/reset-password-email",{name:d.displayName,appName:config.app.title,url:"http://"+a.headers.host+"/auth/reset/"+c},function(a,b){e(a,b,d)})},function(a,c,d){var e=nodemailer.createTransport(config.mailer.options),f={to:c.email,from:config.mailer.from,subject:"Password Reset",html:a};e.sendMail(f,function(a){a||b.send({message:"An email has been sent to "+c.email+" with further instructions."}),d(a)})}],function(a){return a?c(a):void 0})},exports.validateResetToken=function(a,b){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(c,d){return d?void b.redirect("/#!/password/reset/"+a.params.token):b.redirect("/#!/password/reset/invalid")})},exports.reset=function(a,b,c){var d=a.body;async.waterfall([function(c){User.findOne({resetPasswordToken:a.params.token,resetPasswordExpires:{$gt:Date.now()}},function(e,f){return e||!f?b.status(400).send({message:"Password reset token is invalid or has expired."}):d.newPassword!==d.verifyPassword?b.status(400).send({message:"Passwords do not match"}):(f.password=d.newPassword,f.resetPasswordToken=void 0,f.resetPasswordExpires=void 0,void f.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(f,function(a){a?b.status(400).send(a):(b.json(f),c(a,f))})}))})},function(a,c){b.render("templates/reset-password-confirm-email",{name:a.displayName,appName:config.app.title},function(b,d){c(b,d,a)})},function(a,b,c){var d=nodemailer.createTransport(config.mailer.options),e={to:b.email,from:config.mailer.from,subject:"Your password has been changed",html:a};d.sendMail(e,function(a){c(a,"done")})}],function(a){return a?c(a):void 0})},exports.changePassword=function(a,b){var c=a.body;a.user?c.newPassword?User.findById(a.user.id,function(d,e){!d&&e?e.authenticate(c.currentPassword)?c.newPassword===c.verifyPassword?(e.password=c.newPassword,e.save(function(c){return c?b.status(400).send({message:errorHandler.getErrorMessage(c)}):void a.login(e,function(a){a?b.status(400).send(a):b.send({message:"Password changed successfully"})})})):b.status(400).send({message:"Passwords do not match"}):b.status(400).send({message:"Current password is incorrect"}):b.status(400).send({message:"User is not found"})}):b.status(400).send({message:"Please provide a new password"}):b.status(400).send({message:"User is not signed in"})};var _=require("lodash"),errorHandler=require("../errors.server.controller.js"),mongoose=require("mongoose"),passport=require("passport"),User=mongoose.model("User");exports.update=function(a,b){var c=a.user;delete a.body.roles,c?(c=_.extend(c,a.body),c.updated=Date.now(),c.displayName=c.firstName+" "+c.lastName,c.save(function(d){return d?b.status(400).send({message:errorHandler.getErrorMessage(d)}):void a.login(c,function(a){a?b.status(400).send(a):b.json(c)})})):b.status(400).send({message:"User is not signed in"})},exports.me=function(a,b){b.json(a.user||null)};